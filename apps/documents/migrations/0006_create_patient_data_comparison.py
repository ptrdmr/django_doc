# Generated by Django 5.2.3 on 2025-09-16 13:31

import django.db.models.deletion
import django_cryptography.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('documents', '0005_parseddata_source_snippets'),
        ('patients', '0005_convert_to_hybrid_encryption'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PatientDataComparison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('in_progress', 'In Progress'), ('resolved', 'Resolved'), ('conflicted', 'Has Conflicts'), ('skipped', 'Skipped - No Discrepancies')], default='pending', help_text='Current status of the comparison process', max_length=20)),
                ('total_fields_compared', models.PositiveIntegerField(default=0, help_text='Total number of fields compared')),
                ('discrepancies_found', models.PositiveIntegerField(default=0, help_text='Number of discrepancies found between sources')),
                ('fields_resolved', models.PositiveIntegerField(default=0, help_text='Number of fields that have been resolved')),
                ('comparison_data', models.JSONField(default=dict, help_text='Field-by-field comparison data structure')),
                ('resolution_decisions', models.JSONField(default=dict, help_text='Resolution decisions for each field with discrepancies')),
                ('overall_confidence_score', models.FloatField(blank=True, help_text='Overall confidence score for the comparison (0.0-1.0)', null=True)),
                ('data_quality_score', models.FloatField(blank=True, help_text='Quality score for the extracted data (0.0-1.0)', null=True)),
                ('reviewed_at', models.DateTimeField(blank=True, help_text='When the comparison was reviewed and resolved', null=True)),
                ('reviewer_notes', django_cryptography.fields.encrypt(models.TextField(blank=True, help_text='Reviewer notes and justification for decisions - encrypted at rest'))),
                ('auto_resolution_summary', models.TextField(blank=True, help_text='Summary of automatic resolutions applied')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(help_text='Source document for this comparison', on_delete=django.db.models.deletion.CASCADE, related_name='data_comparisons', to='documents.document')),
                ('parsed_data', models.ForeignKey(help_text='Parsed data being compared against patient record', on_delete=django.db.models.deletion.CASCADE, related_name='comparisons', to='documents.parseddata')),
                ('patient', models.ForeignKey(help_text='Patient whose data is being compared', on_delete=django.db.models.deletion.CASCADE, related_name='data_comparisons', to='patients.patient')),
                ('reviewer', models.ForeignKey(blank=True, help_text='User who performed the comparison review', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_data_comparisons', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'patient_data_comparisons',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['patient', 'status'], name='patient_dat_patient_4058a8_idx'), models.Index(fields=['document', 'status'], name='patient_dat_documen_bd91c0_idx'), models.Index(fields=['reviewer', 'reviewed_at'], name='patient_dat_reviewe_f7686e_idx'), models.Index(fields=['status', 'created_at'], name='patient_dat_status_0581c3_idx')],
                'constraints': [models.UniqueConstraint(fields=('document', 'patient'), name='unique_document_patient_comparison')],
            },
        ),
    ]
