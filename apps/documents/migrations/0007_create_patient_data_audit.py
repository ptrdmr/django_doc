# Generated by Django 5.2.3 on 2025-09-16 14:29

import django.db.models.deletion
import django_cryptography.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('documents', '0006_create_patient_data_comparison'),
        ('patients', '0005_convert_to_hybrid_encryption'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PatientDataAudit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('field_name', models.CharField(help_text='Name of the patient field that was changed', max_length=100)),
                ('change_type', models.CharField(choices=[('field_update', 'Field Update'), ('bulk_update', 'Bulk Update'), ('manual_edit', 'Manual Edit'), ('rollback', 'Rollback'), ('merge_conflict_resolution', 'Merge Conflict Resolution')], help_text='Type of change that was made', max_length=30)),
                ('change_source', models.CharField(choices=[('document_review', 'Document Review Comparison'), ('manual_entry', 'Manual Entry'), ('system_migration', 'System Migration'), ('admin_correction', 'Admin Correction')], default='document_review', help_text='Source system that initiated the change', max_length=30)),
                ('original_value', django_cryptography.fields.encrypt(models.TextField(blank=True, help_text='Original value before change - encrypted at rest'))),
                ('new_value', django_cryptography.fields.encrypt(models.TextField(blank=True, help_text='New value after change - encrypted at rest'))),
                ('confidence_score', models.FloatField(blank=True, help_text='Confidence score of the data that triggered the change', null=True)),
                ('data_quality_score', models.FloatField(blank=True, help_text='Quality score of the new data', null=True)),
                ('reviewer_reasoning', django_cryptography.fields.encrypt(models.TextField(blank=True, help_text="Reviewer's reasoning for the change - encrypted at rest"))),
                ('ip_address', models.GenericIPAddressField(blank=True, help_text='IP address of the user who made the change', null=True)),
                ('user_agent', models.TextField(blank=True, help_text='User agent string of the browser/system')),
                ('session_key', models.CharField(blank=True, help_text='Session key for grouping related changes', max_length=40)),
                ('additional_context', models.JSONField(blank=True, default=dict, help_text='Additional context data for the change')),
                ('comparison', models.ForeignKey(blank=True, help_text='Data comparison that led to this change (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to='documents.patientdatacomparison')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL)),
                ('document', models.ForeignKey(blank=True, help_text='Source document that triggered the change (if applicable)', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_data_audits', to='documents.document')),
                ('patient', models.ForeignKey(help_text='Patient whose data was modified', on_delete=django.db.models.deletion.CASCADE, related_name='data_audit_logs', to='patients.patient')),
                ('reviewer', models.ForeignKey(blank=True, help_text='User who made the change', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patient_data_audits', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'patient_data_audit_logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['patient', 'created_at'], name='patient_dat_patient_dbdf34_idx'), models.Index(fields=['document', 'created_at'], name='patient_dat_documen_4f2bfc_idx'), models.Index(fields=['field_name', 'change_type'], name='patient_dat_field_n_2b59ce_idx'), models.Index(fields=['reviewer', 'created_at'], name='patient_dat_reviewe_1a19f0_idx'), models.Index(fields=['change_source', 'created_at'], name='patient_dat_change__9cf53d_idx')],
            },
        ),
    ]
