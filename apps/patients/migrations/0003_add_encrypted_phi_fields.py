# Generated by Django 5.2.3 on 2025-08-25 15:23

import django_cryptography.fields
from django.db import migrations, models


def copy_to_encrypted_fields(apps, schema_editor):
    """Copy existing data to encrypted fields."""
    Patient = apps.get_model('patients', 'Patient')
    
    # Get all existing patients
    for patient in Patient.objects.all():
        # Copy data to encrypted fields
        if patient.first_name:
            patient.first_name_encrypted = patient.first_name
        if patient.last_name:
            patient.last_name_encrypted = patient.last_name
        if patient.date_of_birth:
            patient.date_of_birth_encrypted = patient.date_of_birth.strftime('%Y-%m-%d')
        if patient.ssn:
            patient.ssn_encrypted = patient.ssn
        patient.save()


def copy_from_encrypted_fields(apps, schema_editor):
    """Copy encrypted data back to original fields (for rollback)."""
    Patient = apps.get_model('patients', 'Patient')
    from datetime import datetime
    
    # This is for rollback - copy from encrypted fields back to original
    for patient in Patient.objects.all():
        if hasattr(patient, 'first_name_encrypted') and patient.first_name_encrypted:
            patient.first_name = patient.first_name_encrypted
        if hasattr(patient, 'last_name_encrypted') and patient.last_name_encrypted:
            patient.last_name = patient.last_name_encrypted
        if hasattr(patient, 'date_of_birth_encrypted') and patient.date_of_birth_encrypted:
            try:
                date_obj = datetime.strptime(patient.date_of_birth_encrypted, '%Y-%m-%d').date()
                patient.date_of_birth = date_obj
            except (ValueError, TypeError):
                pass
        if hasattr(patient, 'ssn_encrypted') and patient.ssn_encrypted:
            patient.ssn = patient.ssn_encrypted
        patient.save()


class Migration(migrations.Migration):

    dependencies = [
        ('patients', '0002_alter_patienthistory_action'),
    ]

    operations = [
        # Step 1: Add new encrypted fields (address, phone, email)
        migrations.AddField(
            model_name='patient',
            name='address',
            field=django_cryptography.fields.encrypt(models.TextField(blank=True, null=True)),
        ),
        migrations.AddField(
            model_name='patient',
            name='email',
            field=django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=100, null=True)),
        ),
        migrations.AddField(
            model_name='patient',
            name='phone',
            field=django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=20, null=True)),
        ),
        
        # Step 2: Add temporary encrypted fields for existing fields
        migrations.AddField(
            model_name='patient',
            name='first_name_encrypted',
            field=django_cryptography.fields.encrypt(models.CharField(max_length=255, null=True)),
        ),
        migrations.AddField(
            model_name='patient',
            name='last_name_encrypted',
            field=django_cryptography.fields.encrypt(models.CharField(max_length=255, null=True)),
        ),
        migrations.AddField(
            model_name='patient',
            name='date_of_birth_encrypted',
            field=django_cryptography.fields.encrypt(models.CharField(max_length=10, help_text='YYYY-MM-DD format', null=True)),
        ),
        migrations.AddField(
            model_name='patient',
            name='ssn_encrypted',
            field=django_cryptography.fields.encrypt(models.CharField(blank=True, max_length=11, null=True)),
        ),
        
        # Step 3: Convert existing data
        migrations.RunPython(copy_to_encrypted_fields, copy_from_encrypted_fields),
        
        # Step 4: Remove old unencrypted fields
        migrations.RemoveField(
            model_name='patient',
            name='first_name',
        ),
        migrations.RemoveField(
            model_name='patient',
            name='last_name',
        ),
        migrations.RemoveField(
            model_name='patient',
            name='date_of_birth',
        ),
        migrations.RemoveField(
            model_name='patient',
            name='ssn',
        ),
        
        # Step 5: Rename encrypted fields to original names
        migrations.RenameField(
            model_name='patient',
            old_name='first_name_encrypted',
            new_name='first_name',
        ),
        migrations.RenameField(
            model_name='patient',
            old_name='last_name_encrypted',
            new_name='last_name',
        ),
        migrations.RenameField(
            model_name='patient',
            old_name='date_of_birth_encrypted',
            new_name='date_of_birth',
        ),
        migrations.RenameField(
            model_name='patient',
            old_name='ssn_encrypted',
            new_name='ssn',
        ),
        
        # Step 6: Update gender field help text
        migrations.AlterField(
            model_name='patient',
            name='gender',
            field=models.CharField(blank=True, choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], help_text='Gender is not considered PHI, stored unencrypted', max_length=1),
        ),
    ]
