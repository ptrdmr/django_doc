# Generated by Django 5.2.3 on 2025-10-06 21:11

from django.db import migrations


def backfill_search_fields(apps, schema_editor):
    """
    Backfill search-optimized fields for existing patient records.
    
    Populates first_name_search and last_name_search with lowercase
    versions of the encrypted first_name and last_name fields.
    """
    Patient = apps.get_model('patients', 'Patient')
    
    # Process patients in batches for better performance
    batch_size = 100
    updated_count = 0
    
    # Get all patients
    patients = Patient.objects.all()
    total_count = patients.count()
    
    for patient in patients.iterator(chunk_size=batch_size):
        # Populate search fields
        if patient.first_name:
            patient.first_name_search = patient.first_name.lower()
        if patient.last_name:
            patient.last_name_search = patient.last_name.lower()
        
        patient.save()
        updated_count += 1
        
        # Log progress every 100 records
        if updated_count % 100 == 0:
            print(f"Backfilled {updated_count}/{total_count} patient records...")
    
    print(f"Successfully backfilled search fields for {updated_count} patient records.")


def reverse_backfill(apps, schema_editor):
    """
    Reverse migration - clear search fields.
    """
    Patient = apps.get_model('patients', 'Patient')
    Patient.objects.all().update(first_name_search='', last_name_search='')


class Migration(migrations.Migration):

    dependencies = [
        ('patients', '0006_patient_first_name_search_patient_last_name_search'),
    ]

    operations = [
        migrations.RunPython(backfill_search_fields, reverse_backfill),
    ]
